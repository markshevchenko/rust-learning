{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0","program":"C:\\Users\\mark\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","modifier","C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=49588c81bea0fbc7","-C","extra-filename=-49588c81bea0fbc7","--out-dir","c:\\Projects\\rust-learning\\02\\iron-gcd\\target\\rls\\debug\\deps","-L","dependency=c:\\Projects\\rust-learning\\02\\iron-gcd\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\mark\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Projects\\rust-learning\\02\\iron-gcd\\target\\rls\\debug\\deps\\libmodifier-49588c81bea0fbc7.rmeta"},"prelude":{"crate_id":{"name":"modifier","disambiguator":[8443501881527507118,10742774631500754623]},"crate_root":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src","external_crates":[{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[45344308337484766,904807583985397655]}},{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[17608585110195136257,12532935013018738971]}},{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10644633998059158352,10345665241509147306]}},{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18212625787733517551,4937265065110821766]}},{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2699922135837212616,11588109643627721037]}},{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[16653465091603201180,18239440457404116996]}},{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3073254730555026972,7758270140448631200]}},{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[13759999943095835806,4978516890064261122]}},{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[4575299228079760236,9361028770882531394]}},{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10307147502021998988,15592389341950453369]}},{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2670035867216739096,10315597156951015330]}},{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[7309248630993686720,3186694738066578297]}}],"span":{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","byte_start":0,"byte_end":1759,"line_start":1,"line_end":71,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","byte_start":0,"byte_end":1759,"line_start":1,"line_end":71,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":11}],"decl_id":null,"docs":" Overloadable modification through both owned and mutable references\n to a type with minimal code duplication.\n","sig":null,"attributes":[{"value":"deny(missing_docs, warnings)","span":{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","byte_start":0,"byte_end":32,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/ Overloadable modification through both owned and mutable references","span":{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","byte_start":34,"byte_end":105,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/ to a type with minimal code duplication.","span":{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","byte_start":106,"byte_end":150,"line_start":4,"line_end":4,"column_start":1,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":3},"span":{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","byte_start":362,"byte_end":370,"line_start":10,"line_end":10,"column_start":11,"column_end":19},"name":"Modifier","qualname":"::Modifier","value":"Modifier<F: ?Sized>","parent":null,"children":[{"krate":0,"index":5}],"decl_id":null,"docs":" Allows use of the implemented type as an argument to Set::set.","sig":null,"attributes":[{"value":"/ Allows use of the implemented type as an argument to Set::set.","span":{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","byte_start":152,"byte_end":218,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","byte_start":219,"byte_end":222,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This allows types to be used for ad-hoc overloading of Set::set","span":{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","byte_start":223,"byte_end":290,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"/ to perform complex updates to the parameter of Modifier.","span":{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","byte_start":291,"byte_end":351,"line_start":9,"line_end":9,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":5},"span":{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","byte_start":421,"byte_end":427,"line_start":12,"line_end":12,"column_start":8,"column_end":14},"name":"modify","qualname":"::Modifier::modify","value":"pub fn modify(Self, &mut F)","parent":{"krate":0,"index":3},"children":[],"decl_id":null,"docs":" Modify `F` with self.\n","sig":null,"attributes":[{"value":"/ Modify `F` with self.","span":{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","byte_start":388,"byte_end":413,"line_start":11,"line_end":11,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":6},"span":{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","byte_start":607,"byte_end":610,"line_start":19,"line_end":19,"column_start":11,"column_end":14},"name":"Set","qualname":"::Set","value":"Set","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":9}],"decl_id":null,"docs":" A trait providing the set and set_mut methods for all types.","sig":null,"attributes":[{"value":"/ A trait providing the set and set_mut methods for all types.","span":{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","byte_start":446,"byte_end":510,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","byte_start":511,"byte_end":514,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Simply implement this for your types and they can be used","span":{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","byte_start":515,"byte_end":576,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/ with modifiers.","span":{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","byte_start":577,"byte_end":596,"line_start":18,"line_end":18,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","byte_start":691,"byte_end":694,"line_start":22,"line_end":22,"column_start":8,"column_end":11},"name":"set","qualname":"::Set::set","value":"pub fn set<M: Modifier<Self>>(Self, M) -> Self where Self: Sized","parent":{"krate":0,"index":6},"children":[],"decl_id":null,"docs":" Modify self using the provided modifier.\n","sig":null,"attributes":[{"value":"/ Modify self using the provided modifier.","span":{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","byte_start":617,"byte_end":661,"line_start":20,"line_end":20,"column_start":5,"column_end":49}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","byte_start":666,"byte_end":683,"line_start":21,"line_end":21,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","byte_start":926,"byte_end":933,"line_start":29,"line_end":29,"column_start":8,"column_end":15},"name":"set_mut","qualname":"::Set::set_mut","value":"pub fn set_mut<M: Modifier<Self>>(&mut Self, M) -> &mut Self","parent":{"krate":0,"index":6},"children":[],"decl_id":null,"docs":" Modify self through a mutable reference with the provided modifier.\n","sig":null,"attributes":[{"value":"/ Modify self through a mutable reference with the provided modifier.","span":{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","byte_start":825,"byte_end":896,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\mark\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\modifier-0.1.0\\src\\lib.rs","byte_start":901,"byte_end":918,"line_start":28,"line_end":28,"column_start":5,"column_end":22}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}